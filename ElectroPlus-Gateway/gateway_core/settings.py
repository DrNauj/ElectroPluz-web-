"""
Django settings for gateway_core project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
import os
from dotenv import load_dotenv

# Cargar variables de entorno desde el .env del proyecto (development)
load_dotenv(BASE_DIR / '.env')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', 'localhost,127.0.0.1').split(',')

# Configuración de Microservicios
MICROSERVICES = {
    'INVENTARIO': {
        'BASE_URL': os.getenv('INVENTARIO_URL', 'http://localhost:8001'),
        'API_KEY': os.getenv('INVENTARIO_API_KEY', 'your-api-key-here')
    },
    'VENTAS': {
        'BASE_URL': os.getenv('VENTAS_URL', 'http://localhost:8002'),
        'API_KEY': os.getenv('VENTAS_API_KEY', 'your-api-key-here')
    }
}

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Eliminamos 'debug_toolbar' ya que no está instalado y está causando el error.
    # 'debug_toolbar', # <--- COMENTADO/ELIMINADO
    'rest_framework',
    'gateway_app.apps.GatewayAppConfig',
    'storefront.apps.StorefrontConfig', # Frontend público (tienda)
    # Las siguientes apps deben ser eliminadas si son solo microservicios
    # 'sales.apps.SalesConfig', # Microservicio de Ventas
    # 'inventory.apps.InventoryConfig', # Microservicio de Inventario
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # 'debug_toolbar.middleware.DebugToolbarMiddleware', # <--- COMENTADO/ELIMINADO
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # Middleware personalizado para autenticación y datos de usuario en el Gateway
    'gateway_app.middleware.AuthenticationMiddleware', 
    'gateway_app.middleware.UserDataMiddleware', 
]

ROOT_URLCONF = 'gateway_core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates',
            BASE_DIR / 'gateway_app' / 'templates',
            BASE_DIR / 'storefront' / 'templates',
            # BASE_DIR / 'sales' / 'templates',
            # BASE_DIR / 'inventory' / 'templates',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'storefront.context_processors.categories.categories',  # Categorías para el navbar
            ],
        },
    },
]

WSGI_APPLICATION = 'gateway_core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'es-es'

TIME_ZONE = 'America/Lima' # Ajustado a Lima, Perú

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static',
    # BASE_DIR / 'sales' / 'static',
    # BASE_DIR / 'inventory' / 'static',
]

# Configuración de archivos estáticos para producción
STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.ManifestStaticFilesStorage'
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Configuración de caché
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
    }
}

# Cache timeout para vistas
VIEW_CACHE_TIMEOUT = 300  # 5 minutos

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Microservices Configuration
MICROSERVICES = {
    'INVENTARIO': {
        'BASE_URL': 'http://localhost:8001/',
        'API_KEY': os.getenv('INVENTARIO_API_KEY', 'dev-key'),
    },
    'VENTAS': {
        'BASE_URL': 'http://localhost:8002/',
        'API_KEY': os.getenv('VENTAS_API_KEY', 'dev-key'),
    }
}

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Session configuration
SESSION_COOKIE_AGE = 3600  # 1 hora en segundos
SESSION_COOKIE_SECURE = not DEBUG # Usar True en producción
CSRF_COOKIE_SECURE = not DEBUG # Usar True en producción
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

# URLs de redirección
LOGIN_URL = '/auth/login/' # Usado por el decorador @login_required
LOGIN_REDIRECT_URL = '/dashboard/'

# Django REST Framework
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
}

# Configuración específica para Django Debug Toolbar (DEBE ser eliminada/comentada si se quita el paquete)
# INTERNAL_IPS = [
#     "127.0.0.1",
# ]

# Se añaden estas configuraciones por si se están usando en otra parte
LOGGING_CONFIG = None
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
            'propagate': False,
        },
        'gateway_app': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
        },
    },
}
